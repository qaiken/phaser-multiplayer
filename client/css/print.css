@import url(http://fonts.googleapis.com/css?family=Roboto);
html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
abbr, address, cite, code,
del, dfn, em, img, ins, kbd, q, samp,
small, strong, sub, sup, var,
b, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

article, aside, details, figcaption, figure,
footer, header, hgroup, main, menu, nav, section {
  display: block; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  overflow-y: scroll;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility !important;
  -webkit-font-smoothing: antialiased !important; }

body {
  line-height: 1; }

*,
*:before,
*:after {
  position: relative;
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }
  @media (max-width: 959px) {
    * *,
    *:before *,
    *:after * {
      -webkit-tap-highlight-color: transparent; } }

img,
object,
embed {
  max-width: 100%;
  height: auto; }

blockquote, q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help; }

i,
em {
  font-style: italic; }

b,
strong {
  font-weight: bold; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: inherit;
  font: 100%; }

th {
  font-weight: bold;
  vertical-align: bottom; }

td {
  font-weight: normal;
  vertical-align: top; }

input,
select {
  vertical-align: middle; }

input[type=search] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box; }
  input[type=search]::-webkit-search-cancel-button,
  input[type=search]::-webkit-search-decoration,
  input[type=search]::-webkit-search-results-button,
  input[type=search]::-webkit-search-results-decoration {
    -webkit-appearance: none; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

mark {
  background: #ff0;
  color: #000; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  white-space: pre-line;
  word-wrap: break-word; }

pre,
code,
kbd,
samp {
  font-family: monospace, 	sans-serif; }

.cf,
.clear,
.clearfix {
  zoom: 1; }
  .cf:before,
  .clear:before,
  .clearfix:before,
  .cf:after,
  .clear:after,
  .clearfix:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .cf:after,
  .clear:after,
  .clearfix:after {
    clear: both; }

/** Returns a color with an optional tone from the map
 *
 * @param {string}  $color_name     The base name of the color
 * @param {tone}    ($tone|'base')  The tone of that color or 'base'
 *
 * @return {string} The matching color's value from the map
 */
head {
  font-family: "mq-tiny"; }

head {
  font-family: "mq-mini"; }

head {
  font-family: "mq-small"; }

head {
  font-family: "mq-medium"; }

head {
  font-family: "mq-large"; }

head {
  font-family: "mq-xlarge"; }

head {
  font-family: "mq-xxlarge"; }

head {
  font-family: "mq-xxxlarge"; }

title {
  font-family: ""; }

@font-face {
  font-family: 'icon-font';
  src: url("assets/fonts/icon-font/icon-font.eot");
  src: url("assets/fonts/icon-font/icon-font.eot#iefix") format("embedded-opentype"), url("assets/fonts/icon-font/icon-font.woff") format("woff"), url("assets/fonts/icon-font/icon-font.ttf") format("truetype"), url("assets/fonts/icon-font/icon-font.svg#icon-font") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "icon-font" !important;
  width: 1em;
  margin: 0;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  line-height: 1em;
  speak: none; }

.icon-example:before {
  content: '\e800'; }

.browse-happy p {
  display: block;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.visually-hidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute; }

input[type="submit"] {
  background: transparent;
  outline: none;
  border: 0;
  padding: 0;
  margin: 0;
  font-size: 1em;
  cursor: pointer; }

@font-face {
  font-family: "symbols";
  src: url("assets/fonts/symbols/symbols.eot");
  src: url("assets/fonts/symbols/symbols.eot?#iefix") format("eot"), url("assets/fonts/symbols/symbols.woff") format("woff"), url("assets/fonts/symbols/symbols.ttf") format("truetype"), url("assets/fonts/symbols/symbols.svg#symbols") format("svg");
  font-weight: normal;
  font-style: normal; }

.symbol:before {
  font-family: "symbols";
  width: 1em;
  margin: 0;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  line-height: 1em;
  speak: none; }

.s-book:before {
  content: "\E001"; }

.s-briefcase:before {
  content: "\E002"; }

.sprite {
  background-image: url("assets/images/sprites/sprite.png"); }

@media (min--moz-device-pixel-ratio: 1.5), (-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
  .sprite {
    background-image: url("assets/images/sprites/sprite@2x.png");
    background-size: 198px 104px; } }

.wysiwyg h2,
.wysiwyg h3,
.wysiwyg h4 {
  font-weight: 300;
  text-transform: uppercase; }

@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important;
    text-shadow: none !important;
    -webkit-filter: none !important;
            filter: none !important;
    -ms-filter: none !important; }
  a,
  a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: ""; }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  thead {
    display: table-header-group; }
  tr,
  img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  @page {
    margin: 0.5cm; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }
  h2,
  h3 {
    page-break-after: avoid; } }

::-moz-selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

::selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

html {
  font-size: 62.5%; }

body {
  background: #000;
  color: #fff;
  font-size: 16px;
  font-family: "Roboto", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004); }

a {
  color: #000;
  text-decoration: none; }
  a:hover,
  a:focus,
  a:active {
    color: #999; }
  a:focus {
    outline: none; }

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1; }
  h1 a,
  h2 a,
  h3 a,
  h4 a,
  h5 a,
  h6 a {
    color: #000; }

p,
dl,
address {
  font-size: 1.6rem; }

p,
li,
dt,
dd {
  font-weight: normal;
  font-style: normal; }

li {
  line-height: 1; }

input,
textarea,
select {
  outline: none;
  border-radius: 0;
  border: 1px solid #eee;
  padding: 5px 10px;
  margin: 0;
  width: 100%;
  font-size: 13px; }

input,
textarea,
label {
  color: #000; }

select {
  background: #fff;
  height: 30px;
  padding: 5px 10px; }

select[multiple] {
  height: auto; }

input[type="checkbox"] {
  vertical-align: bottom; }

input[type="radio"] {
  vertical-align: text-bottom; }

label {
  font-weight: 400; }

input:focus,
textarea:focus {
  outline: none;
  border-color: #000;
  background: #444;
  color: #fff; }

input[type="submit"] {
  border-radius: 0;
  height: auto; }

.placeholder {
  color: #000; }

input::-webkit-input-placeholder {
  color: #000; }

input:-moz-placeholder {
  color: #000; }

input::-moz-placeholder {
  color: #000; }

input:-ms-input-placeholder {
  color: #000; }

input:focus::-webkit-input-placeholder {
  color: blue; }

input:focus:-moz-placeholder {
  color: blue; }

input:focus::-moz-placeholder {
  color: blue; }

input:focus:-ms-input-placeholder {
  color: blue; }

button::-moz-focus-inner {
  padding: 0;
  border: 0; }

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0; }

input[type=number] {
  -moz-appearance: textfield; }

input[type="text"],
input[type="time"],
input[type="url"],
input[type="email"],
input[type="password"],
input[type="button"],
input[type="submit"],
textarea {
  -webkit-appearance: none;
  -moz-appearance: none; }

.app-title {
  margin: 0 0 0.21739em 0;
  text-transform: uppercase;
  text-align: center;
  font-size: 2.875em; }

.container {
  max-width: 64em;
  padding: 1.25em 0;
  margin: 0 auto; }

/* No files to import found in vendor//* */
.alertify, .alertify-show, .alertify-log {
  -webkit-transition: all 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
  transition: all 500ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
  /* easeOutBack */ }

.alertify-hide {
  -webkit-transition: all 250ms cubic-bezier(0.6, -0.28, 0.735, 0.045);
  transition: all 250ms cubic-bezier(0.6, -0.28, 0.735, 0.045);
  /* easeInBack */ }

.alertify-log-hide {
  -webkit-transition: all 500ms cubic-bezier(0.6, -0.28, 0.735, 0.045);
  transition: all 500ms cubic-bezier(0.6, -0.28, 0.735, 0.045);
  /* easeInBack */ }

.alertify-message {
  margin: 0 0 1.11111em 0;
  font-size: 1.125em;
  color: #000;
  text-transform: uppercase; }

.alertify-cover {
  position: fixed;
  z-index: 99999;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: white;
  filter: alpha(opacity=0);
  opacity: 0; }

.alertify-cover-hidden {
  display: none; }

.alertify {
  position: fixed;
  z-index: 99999;
  top: 50px;
  left: 50%;
  width: 550px;
  margin-left: -275px;
  opacity: 1; }

.alertify-hidden {
  opacity: 0;
  display: none; }

/* overwrite display: none; for everything except IE6-8 */
:root * > .alertify-hidden {
  display: block;
  visibility: hidden; }

.alertify-logs {
  position: fixed;
  z-index: 5000;
  bottom: 10px;
  right: 10px;
  width: 300px; }

.alertify-logs-hidden {
  display: none; }

.alertify-log {
  display: block;
  margin-top: 10px;
  position: relative;
  right: -300px;
  opacity: 0; }

.alertify-log-show {
  right: 0;
  opacity: 1; }

.alertify-log-hide {
  -webkit-transform: translate(300px, 0);
  -ms-transform: translate(300px, 0);
  transform: translate(300px, 0);
  opacity: 0; }

.alertify-dialog {
  padding: 25px; }

.alertify-resetFocus {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.alertify-inner {
  text-align: center; }

.alertify-text {
  margin-bottom: 15px;
  width: 100%;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  font-size: 100%; }

.alertify-button, .alertify-button:hover, .alertify-button:active, .alertify-button:visited {
  background: none;
  text-decoration: none;
  border: none;
  /* line-height and font-size for input button */
  line-height: 1.5;
  font-size: 100%;
  display: inline-block;
  cursor: pointer;
  margin-left: 5px; }

@media only screen and (max-width: 680px) {
  .alertify, .alertify-logs {
    width: 90%;
    -webkit-box-sizing: border-box;
    box-sizing: border-box; }
  .alertify {
    left: 5%;
    margin: 0; } }

/**
 * Default Look and Feel
 */
.alertify, .alertify-log {
  font-family: sans-serif; }

.alertify {
  background: #FFF;
  border: 10px solid #333;
  /* browsers that don't support rgba */
  border: 10px solid rgba(0, 0, 0, 0.7);
  border-radius: 8px;
  -webkit-box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);
  box-shadow: 0 3px 3px rgba(0, 0, 0, 0.3);
  background-clip: padding-box;
  /* Firefox 4, Safari 5, Opera 10, IE 9 */ }

.alertify-text {
  border: 1px solid #CCC;
  padding: 10px;
  border-radius: 4px; }

.alertify-button {
  border-radius: 4px;
  color: #FFF;
  font-weight: bold;
  padding: 6px 15px;
  text-decoration: none;
  background-color: #000;
  text-transform: uppercase;
  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5);
  -webkit-box-shadow: inset 0 1px 0 0 rgba(255, 255, 255, 0.5);
  box-shadow: inset 0 1px 0 0 rgba(255, 255, 255, 0.5);
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0.3)), to(rgba(255, 255, 255, 0)));
  background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0));
  background-image: linear-gradient(top, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0)); }

.alertify-button:hover, .alertify-button:focus {
  outline: none;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.1)), to(transparent));
  background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, 0.1), transparent);
  background-image: linear-gradient(top, rgba(0, 0, 0, 0.1), transparent); }

.alertify-button:focus {
  -webkit-box-shadow: 0 0 15px #2B72D5;
  box-shadow: 0 0 15px #2B72D5; }

.alertify-button:active {
  position: relative;
  -webkit-box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05); }

.alertify-log {
  background: #1F1F1F;
  background: rgba(0, 0, 0, 0.9);
  padding: 15px;
  border-radius: 4px;
  color: #FFF;
  text-shadow: -1px -1px 0 rgba(0, 0, 0, 0.5); }

.alertify-log-error {
  background: #FE1A00;
  background: rgba(254, 26, 0, 0.9); }

.alertify-log-success {
  background: #5CB811;
  background: rgba(92, 184, 17, 0.9); }

.browse-happy {
  background-color: transparent;
  background-color: rgba(119, 119, 119, 0.97);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#F7777777,endColorstr=#F7777777);
  zoom: 1;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 800; }
  .browse-happy p {
    display: block;
    width: 800px;
    height: 200px;
    font-size: 2em;
    line-height: 1.3em;
    text-align: center;
    color: #fff; }
    .browse-happy p a {
      display: inline-block;
      color: #59b6fd;
      line-height: 1em;
      border-bottom: 1px solid rgba(89, 182, 253, 0.2); }
      .browse-happy p a:hover {
        color: rgba(89, 182, 253, 0.8); }

#game-canvas {
  max-width: 78%;
  float: left;
  overflow: hidden; }

#game-feed {
  width: 22%;
  padding: 0 1.25em;
  float: right;
  text-transform: uppercase; }

.user {
  margin: 0 0 1.25em 0;
  text-align: center; }
  .user h2 {
    font-size: 1.25em;
    margin: 0 0 0.25em 0;
    text-decoration: underline; }

.players h3 {
  text-decoration: underline; }

.players ul {
  list-style-type: none; }

/*# sourceMappingURL=data:application/json;base64, */
